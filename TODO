* Implement proper motion and parallax, Gaia DR2 (or other) references
  * Augment Detection with time, earth position 2d, allow 2d error ellipses?
  * Derive PMDetection having priors on 5d
  * Derive PMMatch for objects with PM freedom
  * Work out new configuration methods for Gaia
  * Change output data to include PM's
  * wtx/y to invCov.
  * Have parallax prior
  * Convert Gaia position to reference epoch
  * Free parallax, PM are options.
  * MaxDeviateSq is different for PMDetection with 5 DOF.  Make it per DOF.
  * Check that PMMatch will appropriately skip when too few DOF, no prior
  * Treat PMDetection as single epoch properly if not using PMMatch

* Allow or derive asymmetric errors and excess variance from turbulence

* Remove duplicate parallactic in decamDCR.py, dup EpochFinder stuff in compresscat.

* Fix configure.py to use exposure-level APCORR more gracefully, maybe make more
  general the option to prefer exposure-level keywords.
  
* Go through test programs (AUDIT file)

* Occasional segfault in ReadExtensions, something to do with multithreading??

* Use individual systematic errors per extension in MagColor

* Read data (and reject short-count exposures) before degeneracy checks

* Why is final mapCollection slow?

* Hex values read for Expressions.

* New nightwise priors using time structure functions
* Atmospheric parameters for nightly priors?

* Update documentation: PixelMap.tex and the fitting classes.
* Document PhotoFit, MagColor and all their parameters.

* Roll back alpha while clipping instead of recalculating full matrix again

* Reduce chunk size in WCSFit

* Check for underfit exposure after sigma clipping

* is minMatch being used consistently for #matches total vs in fitted detections?

* Make Match and PhotoMatch from the same code, no PhotoMatch in gbtools

* Investigate color term degeneracy breaking

-------------DONE
* Fix allfit.py script
* option for DrawAstro to not draw, just make TPVs
* Parallelize Photo2DESDM loops
* Change priors to YAML format
* Write auto-prior script
* clean up gmbpy dependence
* Bring in setup directory
* Bring in python analysis scripts

For py3 branch, upgrading all Python to work with Python 3.x:
    * from __future__ import division,print_function
    * Check all /, change to // where integer floor is desired
    * change print statements
    * switch "if/for x in dict.keys()" to "if/for x in dict"
    * iteritems()->items() (slow now in Python2 since it makes a list? from future.utils import iteritems)
    * range(),zip(),dict.keys(),values(),items() are now iterables, not lists.  Check these...  Note that iterators in dicts won't work if objects are popped out of dict during iteration (or added).
    * xrange -> range
    * __builtin__ module now builtins.  Don't see a __future__ for this.

* Parallax / PM update:
  * chisq and DOF counting
