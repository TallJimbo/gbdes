* Implement proper motion and parallax, Gaia DR2 (or other) references
  * write PMDetection::shiftReferenceEpoch, including refilling base class.
  * prepare() should get expected chisq even for clipped detections
  * Work out expectedChisq considering non-unity weights.
  * WCSFoF needs to get Gaia coords with PM.
  * Program-level systematic errors need to work with any already in config files.
  * Change photometric fit / clip to use fitWeight?
  * Are sigmas stored as arcsec or radians?
  * configure (and config files) need to get 2 weights, epoch, and xObs per exposure and an epoch per field
  * Change python codes to have new PM_INSTRUMENT designations
  * No more sysError in Extension, it's in Exposure
  * make a "key" dictionary for extensions.
  * insert command-line systematic errors into Exposure objects.
  * document that all PM catalogs are ICRS degrees for RA/Dec, mas for PM/Par
  * readObjects makes xyErrKeys array
  * New things for configure.py: get EPOCH for fields, observatory position for exposures somehow; PM_INSTRUMENT flag; 2x2 covariances (possible ERRX2, ERRY2, ERRXY keys); syserrors per exposure;

* Allow photmetric reference catalog

* Allow or derive asymmetric errors and excess variance from turbulence

* Remove duplicate parallactic in decamDCR.py, dup EpochFinder stuff in compresscat.

* Fix configure.py to use exposure-level APCORR more gracefully, maybe make more
  general the option to prefer exposure-level keywords.
  
* Go through test programs (AUDIT file)

* Occasional segfault in ReadExtensions, something to do with multithreading??

* Use individual systematic errors per extension in MagColor

* Read data (and reject short-count exposures) before degeneracy checks

* Why is final mapCollection slow?

* Hex values read for Expressions.

* New nightwise priors using time structure functions
* Atmospheric parameters for nightly priors?

* Update documentation: PixelMap.tex and the fitting classes.
* Document PhotoFit, MagColor and all their parameters.

* Roll back alpha while clipping instead of recalculating full matrix again

* Reduce chunk size in WCSFit

* Check for underfit exposure after sigma clipping

* is minMatch being used consistently for #matches total vs in fitted detections?

* Make Match and PhotoMatch from the same code, no PhotoMatch in gbtools

* Investigate color term degeneracy breaking

-------------DONE
* Fix allfit.py script
* option for DrawAstro to not draw, just make TPVs
* Parallelize Photo2DESDM loops
* Change priors to YAML format
* Write auto-prior script
* clean up gmbpy dependence
* Bring in setup directory
* Bring in python analysis scripts

For py3 branch, upgrading all Python to work with Python 3.x:
    * from __future__ import division,print_function
    * Check all /, change to // where integer floor is desired
    * change print statements
    * switch "if/for x in dict.keys()" to "if/for x in dict"
    * iteritems()->items() (slow now in Python2 since it makes a list? from future.utils import iteritems)
    * range(),zip(),dict.keys(),values(),items() are now iterables, not lists.  Check these...  Note that iterators in dicts won't work if objects are popped out of dict during iteration (or added).
    * xrange -> range
    * __builtin__ module now builtins.  Don't see a __future__ for this.

* Parallax / PM update:
  * chisq and DOF counting
  * Augment Detection with time, earth position 2d, allow 2d error ellipses?
  * Derive PMDetection having priors on 5d
  * Derive PMMatch for objects with PM freedom
  * MaxDeviateSq is different for PMDetection with 5 DOF.  Make it per DOF.
  * readExposure should look for systematic errors (or install them)
  * wtx/y to invCov.
  * Have parallax prior
  * Convert Gaia position to reference epoch
  * Free parallax, PM are options.
  * Make weights per exposure (readExposure, config files)
  * Make a new output file for stellar PM's.
  * get a color for each Match in astro output.
  * Match maintains state telling when to remap coordinates.
  * Check coordalign methods for proper state updating of Matches.
  * Does sigmaClip routine efficiently use remap()?
  * are solve(), predict(), etc. ok when no valid fit for Match (always check dof<0)
  * Insure that positions are calculated even for clipped / non-fit points before output and stats for astrometry
  * WCSFit now uses max error in world coordinates, not pixels
  * ReadObjects must produce new Detection members.
  * Change output data to include PM's
  * Check that PMMatch will appropriately skip when too few DOF, no prior
  * Treat PMDetection as single epoch properly if not using PMMatch
  * Change WCSFit summary output
